plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'jacoco'
	id 'info.solidsoft.pitest' version '1.15.0'
	id "org.sonarqube" version "4.4.1.3373"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("com.h2database:h2:2.2.220")
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	systemProperty 'pitest.logging.verbose', 'true'
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	// Excluye los paquetes espec√≠ficos de los informes
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['com/example/lealtad/controller/dto/**', 'com/example/lealtad/bd/entidad/**'])
		})
	}
	reports {
		csv.required.set(true)
	}
}

pitest {
	distsDirectory
	junit5PluginVersion = '1.2.0'
	verbose = true
	targetClasses = ['com.example.*']
	excludedClasses = ['com.example.lealtad.controller.dto.**', 'com.example.lealtad.bd.entidad.**']
}

sonarqube {
	properties {
		property("sonar.projectName", "lealtad")
	}
}